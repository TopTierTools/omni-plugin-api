bun run typecheck

##########################################################################
# check if the branch is "main" branch, if not then we throw an error #
##########################################################################
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
if [ "$CURRENT_BRANCH" != "main" ]; then
    echo "❌ Should only commit on main branch"
    exit 1
fi

##############################################
# Check if package.json is staged for commit #
##############################################
if git diff --cached --quiet --exit-code package.json; then
    echo "❌ Error: package.json is not staged for commit. Aborting."
    exit 1
fi

#############################################################################################
# Extract the current version in package.json, HEAD refers to the main branch because    #
# we already make sure that we are on the main branch                                    #
#############################################################################################
CURRENT_VERSION=$(git cat-file -p HEAD:package.json | grep '"version"' | sed -E 's/.*"([0-9]+\.[0-9]+\.[0-9]+)".*/\1/')
# Extract the staged version in package.json, we are using git show rather simply reading the file because we want to make sure that we are comparing the staged version
STAGED_VERSION=$(git show :package.json | grep '"version"' | sed -E 's/.*"([0-9]+\.[0-9]+\.[0-9]+)".*/\1/')

# Check if the version has changed
if [ "$CURRENT_VERSION" = "$STAGED_VERSION" ]; then
    echo "❌ Error: Version number in package.json has not been changed. The current version is $CURRENT_VERSION. The staged version is $STAGED_VERSION. Aborting."
    exit 1
fi

#############################################################################################
# Check if the version in package.json and jsr.json are the same, if not then we throw an error #
#############################################################################################
JSR_VERSION=$(cat jsr.json | grep '"version"' | sed -E 's/.*"([0-9]+\.[0-9]+\.[0-9]+)".*/\1/')

if [ "$STAGED_VERSION" != "$JSR_VERSION" ]; then
    echo "❌ Error: Version number in package.json and jsr.json are not the same. The version in package.json is $STAGED_VERSION. The version in jsr.json is $JSR_VERSION. Aborting."
    exit 1
fi
